version: '3.7'

services:
  portainer:
    image: portainer/portainer-ce:latest
    restart: always
    env_file: &envFile
      - .env
    ports:
      - 9000:9000
    volumes:
      - PortainerData:/data
      - /var/run/docker.sock:/var/run/docker.sock
    networks: &network
      - nginxProxy

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    restart: always
    env_file: *envFile
    environment:
      PMA_HOST: mysql5
    ports:
      - ${PHPMYADMIN_PORT}:80
    depends_on:
      - mysql5
    networks: *network

  mysql5:
    image: mysql:5.7
    restart: always
    command: --default-authentication-plugin=mysql_native_password --max_allowed_packet=512M
    env_file: *envFile
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - MysqlDb:/var/lib/mysql
      - ./database:/database
    ports:
      - ${MYSQL_PORT}:3306
    networks: *network

  nginxProxy:
    image: jwilder/nginx-proxy:latest
    restart: always
    env_file: *envFile
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks: *network

  redis:
    image: bitnami/redis:latest
    restart: always
    env_file: .redis.env
    command: /opt/bitnami/scripts/redis/run.sh --maxmemory 100mb --maxmemory-policy allkeys-lru
    networks: *network
    ports:
      - 6379:6379
    volumes:
      - RedisData:/bitnami/redis/data

  cadvisor:
    build:
      context: .
      dockerfile: Dockerfile/cadvisor.Dockerfile
    privileged: true
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    ports:
      - 8082:8080
    networks: *network

  # app:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile/app.Dockerfile
  #   command: php -S 0.0.0.0:${APP_PORT_INTERNAL} -t public
  #   working_dir: /app
  #   env_file: *envFile
  #   environment:
  #     VIRTUAL_HOST: test.local
  #   volumes:
  #     - .:/app
  #   ports:
  #     - ${APP_PORT}:${APP_PORT_INTERNAL}
  #   depends_on:
  #     - mysql5
  #   networks: *network
  # apache:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile/apache.Dockerfile

  # mongo:
  #   image: mongo:latest
  #   env_file: *envFile
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
  #     MONGO_INITDB_ROOT_PASSWORD: ${DB_PASS}
  #   volumes:
  #     - MongoDb:/data/db
  #   ports:
  #     - ${MONGO_PORT}:27017
  #   networks: *network

  # mongo-express:
  #   image: mongo-express:latest
  #   environment:
  #     ME_CONFIG_OPTIONS_EDITORTHEME: ambiance
  #     ME_CONFIG_MONGODB_SERVER: mongo
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: root
  #     ME_CONFIG_BASICAUTH_USERNAME: root
  #     ME_CONFIG_BASICAUTH_PASSWORD: root
  #   ports:
  #     - 8081:8081
  #   networks: *network

volumes:
  PortainerData:
    external:
      name: PortainerData
  MysqlDb:
    external:
      name: MysqlDb
  RedisData:
    external:
      name: RedisData
  MongoDb:
    external:
      name: MongoDb

networks:
  nginxProxy:
    external:
      name: nginxProxy
