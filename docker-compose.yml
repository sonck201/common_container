version: '3.7'

services:
  traefik:
    image: traefik:latest
    restart: on-failure
    command:
      - --api.insecure=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --providers.docker=true
    volumes:
      - ./traefik.yml:/etc/traefik/traefik.yml
      - ./auth.htpasswd:/etc/traefik/auth.htpasswd
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - TraefikPublicCertificates:/certificates
    ports:
      - 80:80
      - 443:443
    networks: &network
      - nginxProxy
    labels:
      - traefik.http.routers.api.rule=Host(`traefik.dualwind.xyz`)
      - traefik.http.routers.api.service=api@internal
      - traefik.http.routers.api.tls=true
      - traefik.http.routers.api.tls.certresolver=letsencrypt
      - traefik.http.routers.blog.tls.domains[0].main=dualwind.xyz
      - traefik.http.routers.blog.tls.domains[0].sans=*.dualwind.xyz
      - traefik.http.routers.api.middlewares=auth
      - traefik.http.middlewares.auth.basicauth.usersfile=/etc/traefik/auth.htpasswd

  portainer:
    image: portainer/portainer-ce:latest
    restart: on-failure
    expose:
      - 9000
    volumes:
      - PortainerData:/data
      - /var/run/docker.sock:/var/run/docker.sock
    networks: *network
    labels:
      - traefik.http.routers.portainer.rule=Host(`portainer.dualwind.xyz`)
      - traefik.http.routers.portainer.tls=true
      - traefik.http.routers.portainer.tls.certresolver=letsencrypt
      - traefik.http.services.portainer.loadbalancer.server.port=9000

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    environment:
      PMA_HOST: mysql5
    expose:
      - 80
    depends_on:
      - mysql5
    networks: *network
    labels:
      - traefik.http.routers.portainer.rule=Host(`phpmyadmin.dualwind.xyz`)
      - traefik.http.routers.portainer.tls=true
      - traefik.http.routers.portainer.tls.certresolver=letsencrypt
      - traefik.http.services.portainer.loadbalancer.server.port=80

  mysql5:
    image: mysql:5.7
    restart: always
    command: --default-authentication-plugin=mysql_native_password --max_allowed_packet=512M
    env_file:
      - ./env/mysql.env
    volumes:
      - MysqlDb:/var/lib/mysql
      - ./database:/database
    ports:
      - 3306:3306
    networks: *network

  redis:
    image: bitnami/redis:latest
    restart: always
    env_file:
      - ./env/redis.env
    command: /opt/bitnami/scripts/redis/run.sh --maxmemory 100mb --maxmemory-policy allkeys-lru
    networks: *network
    ports:
      - 6379:6379
    volumes:
      - RedisData:/bitnami/redis/data

  cadvisor:
    build:
      context: .
      dockerfile: Dockerfile/cadvisor.Dockerfile
    container_name: cadvisor
    privileged: true
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    networks: *network

  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - cadvisor
    networks: *network

  grafana:
    image: grafana/grafana:latest
    restart: no
    volumes:
      - GrafanaData:/var/lib/grafana
    depends_on:
      - prometheus
    networks: *network
    labels:
      - traefik.http.routers.portainer.rule=Host(`grafana.dualwind.xyz`)
      - traefik.http.routers.portainer.tls=true
      - traefik.http.routers.portainer.tls.certresolver=letsencrypt
      - traefik.http.services.portainer.loadbalancer.server.port=3000

volumes:
  TraefikPublicCertificates:
  PortainerData:
    external:
      name: PortainerData
  MysqlDb:
    external:
      name: MysqlDb
  RedisData:
    external:
      name: RedisData
  GrafanaData:

networks:
  nginxProxy:
    external:
      name: nginxProxy
